plugins {
    id 'fabric-loom' version '1.4-SNAPSHOT'
    id "maven-publish"
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

group = project.mod_group
archivesBaseName = project.mod_name
version = project.mod_version

// Dependencies
dependencies {
    minecraft "com.mojang:minecraft:${mc_version}"
    mappings "net.fabricmc:yarn:${yarn_mappings}"
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    implementation "de.javagl:obj:0.3.0"
    include "de.javagl:obj:0.3.0"
}

loom {
    accessWidenerPath = file("src/main/resources/foml.accesswidener")
}

subprojects {
    afterEvaluate {
        jar {
            from "LICENSE.md"
            manifest {
                attributes([
                        "Implementation-Title": project.name,
                        "Implementation-Version": project.version,
                        "Maven-Artifact": "${project.group}:${project.archivesBaseName}:${project.version}".toLowerCase(Locale.ROOT),
                        "Built-On-Minecraft": "${mc_version}"
                ])
            }
        }

        // Resource processing
        processResources {
            inputs.property 'archivesBaseName', project.archivesBaseName
            inputs.property 'version', project.version

            from(sourceSets.main.resources.srcDirs) {
                include 'fabric.mod.json'
                expand 'modid': project.archivesBaseName,
                        'version': project.version
            }

            from(sourceSets.main.resources.srcDirs) {
                exclude 'fabric.mod.json'
            }
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
